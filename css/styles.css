*:not(html),
*::before,
*::after {
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
  position: relative; /* Ensures that highlights can be placed properly */

  animation-duration: 0.5s;
}

:root {

}

html {
  font-size: 20%;
}

body {
  line-height: 1;
  padding: 5rem;
  /* background-color: #aaa; */

  font-family: 'Source Code Pro', monospace;
  font-size: 4rem;
}

span {
  display: inline-block;
}

.hidden {
  display: none!important;
}

.box {
  width: 8rem;
  height: 8rem;
  margin-top: 10rem;
  display: inline-block;
}

.box--forward {
  background-color: blue;
}

.box--backward {
  background-color: red;
}

.arrow {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.arrow-line {
  stroke:rgb(255,0,0);
  stroke-width:4; 
  marker-end:url(#markerArrow);
}

.highlightable::before {
  display: block;
  content: "";
  position: absolute;
  z-index: -1;
  top: -1rem;
  left: -0.5rem;
  border-radius: 1rem;
  clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
  animation-play-state: inherit;

  width: calc(100% + 1rem);
  height: calc(100% + 2rem);
  background-color: #F9F278;
}

.job-cards {
  display: flex;
  flex-direction: column;
  gap: 25rem;
}

.job-card {
  display: flex;
  flex-direction: column;
  gap: 25rem;
}

.job-card-content {
  width: max-content;
  height: 25rem;
  padding: 4rem;
  background-color: #EFEFEF;
  z-index: -2;

  display: flex;
  align-items: center;
  gap: 1rem;
}

.job-card-children {
  left: 30rem;
  display: flex;
  flex-direction: column;
  gap: 25rem;
}


.M-access-container {

}

.M-access,
.M-entry {
  color: #B36CD8;
}

.SJ-num {
  color: #FF0000;
}

.next-SJ-num-container {

}

.next-SJ-num-expression {
  color: black;
}

.next-SJ-num {
  color: black;
}


.arrow-container {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;

  display: flex;
  align-items: center;
}

.arrow-head {
  width: 2rem;
  height: 3.6rem;
  background-color: black;
  clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
}

.arrow-tail {
  width: 16rem;
  height: 1rem;
  background-color: black;
}




.formula-container {
  display: flex;
  align-items: center;
}

.formula-computation {
  display: flex;
  align-items: center;
}

.max-container {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.curly-brace {
  height: 20rem;
  width: auto;
}

.computations-container {
  height: min-content;
  margin-left: -1rem;

  display: flex;
  flex-direction: column;
  gap: 5rem;
}

.computation {
  color: black;
}

.computation-1 {
  
}

.computation-2 {

}

.computation-result {
  color: black;
}

.weight {
  color: #0000FF;
}

.plus-sign {

}

.OPT-expression-container {

}

.OPT-expression {
  color: #845C35;
}

.OPT-result {
  color: black;
}

.c-access-container {

}

.c-access,
.c-entry {
  color: #62B720;
}




.highlight::before,
.undo--un-highlight::before {
  animation-name: entering-wipe-from-left;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
}

.un-highlight::before,
.undo--highlight::before {
  animation-name: exiting-wipe-to-left;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
}

.fade-in,
.undo--fade-out {
  animation-name: fading-in;
}

.fade-out,
.undo--fade-in {
  animation-name: fading-out;
}

.enter-wipe-from-right,
.undo--exit-wipe-to-right {
  animation-name: entering-wipe-from-right;
}

.exit-wipe-to-right,
.undo--enter-wipe-from-right {
  animation-name: exiting-wipe-to-right;
}

.enter-wipe-from-left,
.undo--exit-wipe-to-left {
  animation-name: entering-wipe-from-left;
}

.exit-wipe-to-left,
.undo--enter-wipe-from-left {
  animation-name: exiting-wipe-to-left;
}


@keyframes fading-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fading-out {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes entering-wipe-from-right {
  0% {
    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
  }

  100% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes exiting-wipe-to-right {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }

  100% {
    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
  }
}

@keyframes entering-wipe-from-left {
  0% {
    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
  }

  100% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes exiting-wipe-to-left {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }

  
  100% {
    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
  }
}
